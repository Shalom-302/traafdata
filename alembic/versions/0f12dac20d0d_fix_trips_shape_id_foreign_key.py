"""Fix trips shape_id foreign key

Revision ID: 0f12dac20d0d
Revises: cd024daf372e
Create Date: 2025-05-14 15:50:50.493390

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '0f12dac20d0d'
down_revision: Union[str, None] = 'cd024daf372e'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('agencies',
    sa.Column('agency_id', sa.String(), nullable=False),
    sa.Column('agency_name', sa.String(), nullable=False),
    sa.Column('agency_url', sa.String(), nullable=False),
    sa.Column('agency_timezone', sa.String(), nullable=False),
    sa.Column('agency_lang', sa.String(), nullable=True),
    sa.Column('agency_phone', sa.String(), nullable=True),
    sa.Column('agency_fare_url', sa.String(), nullable=True),
    sa.Column('agency_email', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('agency_id')
    )
    op.create_index(op.f('ix_agencies_agency_id'), 'agencies', ['agency_id'], unique=False)
    op.create_table('calendar',
    sa.Column('service_id', sa.String(), nullable=False),
    sa.Column('monday', sa.Integer(), nullable=False),
    sa.Column('tuesday', sa.Integer(), nullable=False),
    sa.Column('wednesday', sa.Integer(), nullable=False),
    sa.Column('thursday', sa.Integer(), nullable=False),
    sa.Column('friday', sa.Integer(), nullable=False),
    sa.Column('saturday', sa.Integer(), nullable=False),
    sa.Column('sunday', sa.Integer(), nullable=False),
    sa.Column('start_date', sa.String(), nullable=False),
    sa.Column('end_date', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('service_id')
    )
    op.create_index(op.f('ix_calendar_service_id'), 'calendar', ['service_id'], unique=False)
    op.create_table('feed_info',
    sa.Column('feed_publisher_name', sa.String(), nullable=False),
    sa.Column('feed_publisher_url', sa.String(), nullable=False),
    sa.Column('feed_lang', sa.String(), nullable=False),
    sa.Column('default_lang', sa.String(), nullable=True),
    sa.Column('feed_start_date', sa.String(), nullable=True),
    sa.Column('feed_end_date', sa.String(), nullable=True),
    sa.Column('feed_version', sa.String(), nullable=True),
    sa.Column('feed_contact_email', sa.String(), nullable=True),
    sa.Column('feed_contact_url', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('feed_publisher_name')
    )
    op.create_index(op.f('ix_feed_info_feed_publisher_name'), 'feed_info', ['feed_publisher_name'], unique=False)
    op.create_table('levels',
    sa.Column('level_id', sa.String(), nullable=False),
    sa.Column('level_index', sa.Float(), nullable=False),
    sa.Column('level_name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('level_id')
    )
    op.create_index(op.f('ix_levels_level_id'), 'levels', ['level_id'], unique=False)
    op.create_table('shapes',
    sa.Column('shape_id', sa.String(), nullable=False),
    sa.Column('shape_pt_lat', sa.Float(), nullable=False),
    sa.Column('shape_pt_lon', sa.Float(), nullable=False),
    sa.Column('shape_pt_sequence', sa.Integer(), nullable=False),
    sa.Column('shape_dist_traveled', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('shape_id', 'shape_pt_sequence', name='pk_shapes')
    )
    op.create_index(op.f('ix_shapes_shape_id'), 'shapes', ['shape_id'], unique=False)
    op.create_table('calendar_dates',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('service_id', sa.String(), nullable=False),
    sa.Column('date', sa.String(), nullable=False),
    sa.Column('exception_type', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['service_id'], ['calendar.service_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_calendar_dates_service_id'), 'calendar_dates', ['service_id'], unique=False)
    op.create_table('fare_attributes',
    sa.Column('fare_id', sa.String(), nullable=False),
    sa.Column('price', sa.Float(), nullable=False),
    sa.Column('currency_type', sa.String(), nullable=False),
    sa.Column('payment_method', sa.Integer(), nullable=False),
    sa.Column('transfers', sa.Integer(), nullable=True),
    sa.Column('agency_id', sa.String(), nullable=True),
    sa.Column('transfer_duration', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['agency_id'], ['agencies.agency_id'], ),
    sa.PrimaryKeyConstraint('fare_id')
    )
    op.create_index(op.f('ix_fare_attributes_fare_id'), 'fare_attributes', ['fare_id'], unique=False)
    op.create_table('routes',
    sa.Column('route_id', sa.String(), nullable=False),
    sa.Column('agency_id', sa.String(), nullable=True),
    sa.Column('route_short_name', sa.String(), nullable=True),
    sa.Column('route_long_name', sa.String(), nullable=True),
    sa.Column('route_desc', sa.String(), nullable=True),
    sa.Column('route_type', sa.Integer(), nullable=False),
    sa.Column('route_url', sa.String(), nullable=True),
    sa.Column('route_color', sa.String(), nullable=True),
    sa.Column('route_text_color', sa.String(), nullable=True),
    sa.Column('route_sort_order', sa.Integer(), nullable=True),
    sa.Column('continuous_pickup', sa.Integer(), nullable=True),
    sa.Column('continuous_drop_off', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['agency_id'], ['agencies.agency_id'], ),
    sa.PrimaryKeyConstraint('route_id')
    )
    op.create_index(op.f('ix_routes_route_id'), 'routes', ['route_id'], unique=False)
    op.create_table('stops',
    sa.Column('stop_id', sa.String(), nullable=False),
    sa.Column('stop_code', sa.String(), nullable=True),
    sa.Column('stop_name', sa.String(), nullable=True),
    sa.Column('stop_desc', sa.String(), nullable=True),
    sa.Column('stop_lat', sa.Float(), nullable=True),
    sa.Column('stop_lon', sa.Float(), nullable=True),
    sa.Column('zone_id', sa.String(), nullable=True),
    sa.Column('stop_url', sa.String(), nullable=True),
    sa.Column('location_type', sa.Integer(), nullable=True),
    sa.Column('parent_station', sa.String(), nullable=True),
    sa.Column('stop_timezone', sa.String(), nullable=True),
    sa.Column('wheelchair_boarding', sa.Integer(), nullable=True),
    sa.Column('level_id', sa.String(), nullable=True),
    sa.Column('platform_code', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['level_id'], ['levels.level_id'], ),
    sa.ForeignKeyConstraint(['parent_station'], ['stops.stop_id'], ),
    sa.PrimaryKeyConstraint('stop_id')
    )
    op.create_index(op.f('ix_stops_stop_id'), 'stops', ['stop_id'], unique=False)
    op.create_table('fare_rules',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('fare_id', sa.String(), nullable=False),
    sa.Column('route_id', sa.String(), nullable=True),
    sa.Column('origin_id', sa.String(), nullable=True),
    sa.Column('destination_id', sa.String(), nullable=True),
    sa.Column('contains_id', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['contains_id'], ['stops.stop_id'], ),
    sa.ForeignKeyConstraint(['destination_id'], ['stops.stop_id'], ),
    sa.ForeignKeyConstraint(['fare_id'], ['fare_attributes.fare_id'], ),
    sa.ForeignKeyConstraint(['origin_id'], ['stops.stop_id'], ),
    sa.ForeignKeyConstraint(['route_id'], ['routes.route_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_fare_rules_fare_id'), 'fare_rules', ['fare_id'], unique=False)
    op.create_table('pathways',
    sa.Column('pathway_id', sa.String(), nullable=False),
    sa.Column('from_stop_id', sa.String(), nullable=False),
    sa.Column('to_stop_id', sa.String(), nullable=False),
    sa.Column('pathway_mode', sa.Integer(), nullable=False),
    sa.Column('is_bidirectional', sa.Integer(), nullable=False),
    sa.Column('length', sa.Float(), nullable=True),
    sa.Column('traversal_time', sa.Integer(), nullable=True),
    sa.Column('stair_count', sa.Integer(), nullable=True),
    sa.Column('max_slope', sa.Float(), nullable=True),
    sa.Column('min_width', sa.Float(), nullable=True),
    sa.Column('signposted_as', sa.String(), nullable=True),
    sa.Column('reversed_signposted_as', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['from_stop_id'], ['stops.stop_id'], ),
    sa.ForeignKeyConstraint(['to_stop_id'], ['stops.stop_id'], ),
    sa.PrimaryKeyConstraint('pathway_id')
    )
    op.create_index(op.f('ix_pathways_pathway_id'), 'pathways', ['pathway_id'], unique=False)
    op.create_table('transfers',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('from_stop_id', sa.String(), nullable=False),
    sa.Column('to_stop_id', sa.String(), nullable=False),
    sa.Column('transfer_type', sa.Integer(), nullable=False),
    sa.Column('min_transfer_time', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['from_stop_id'], ['stops.stop_id'], ),
    sa.ForeignKeyConstraint(['to_stop_id'], ['stops.stop_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('trips',
    sa.Column('trip_id', sa.String(), nullable=False),
    sa.Column('route_id', sa.String(), nullable=False),
    sa.Column('service_id', sa.String(), nullable=False),
    sa.Column('shape_id', sa.String(), nullable=True),
    sa.Column('trip_headsign', sa.String(), nullable=True),
    sa.Column('trip_short_name', sa.String(), nullable=True),
    sa.Column('direction_id', sa.Integer(), nullable=True),
    sa.Column('block_id', sa.String(), nullable=True),
    sa.Column('wheelchair_accessible', sa.Integer(), nullable=True),
    sa.Column('bikes_allowed', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['route_id'], ['routes.route_id'], ),
    sa.ForeignKeyConstraint(['service_id'], ['calendar.service_id'], ),
    sa.PrimaryKeyConstraint('trip_id')
    )
    op.create_index(op.f('ix_trips_route_id'), 'trips', ['route_id'], unique=False)
    op.create_index(op.f('ix_trips_service_id'), 'trips', ['service_id'], unique=False)
    op.create_index(op.f('ix_trips_shape_id'), 'trips', ['shape_id'], unique=False)
    op.create_index(op.f('ix_trips_trip_id'), 'trips', ['trip_id'], unique=False)
    op.create_table('frequencies',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('trip_id', sa.String(), nullable=False),
    sa.Column('start_time', sa.String(), nullable=False),
    sa.Column('end_time', sa.String(), nullable=False),
    sa.Column('headway_secs', sa.Integer(), nullable=False),
    sa.Column('exact_times', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['trip_id'], ['trips.trip_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_frequencies_trip_id'), 'frequencies', ['trip_id'], unique=False)
    op.create_table('stop_times',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('trip_id', sa.String(), nullable=False),
    sa.Column('arrival_time', sa.String(), nullable=True),
    sa.Column('departure_time', sa.String(), nullable=True),
    sa.Column('stop_id', sa.String(), nullable=False),
    sa.Column('stop_sequence', sa.Integer(), nullable=False),
    sa.Column('stop_headsign', sa.String(), nullable=True),
    sa.Column('pickup_type', sa.Integer(), nullable=True),
    sa.Column('drop_off_type', sa.Integer(), nullable=True),
    sa.Column('shape_dist_traveled', sa.Float(), nullable=True),
    sa.Column('timepoint', sa.Integer(), nullable=True),
    sa.Column('fare_units_traveled', sa.Integer(), nullable=True),
    sa.Column('continuous_pickup', sa.Integer(), nullable=True),
    sa.Column('continuous_drop_off', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['stop_id'], ['stops.stop_id'], ),
    sa.ForeignKeyConstraint(['trip_id'], ['trips.trip_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_stop_times_stop_id'), 'stop_times', ['stop_id'], unique=False)
    op.create_index(op.f('ix_stop_times_trip_id'), 'stop_times', ['trip_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_stop_times_trip_id'), table_name='stop_times')
    op.drop_index(op.f('ix_stop_times_stop_id'), table_name='stop_times')
    op.drop_table('stop_times')
    op.drop_index(op.f('ix_frequencies_trip_id'), table_name='frequencies')
    op.drop_table('frequencies')
    op.drop_index(op.f('ix_trips_trip_id'), table_name='trips')
    op.drop_index(op.f('ix_trips_shape_id'), table_name='trips')
    op.drop_index(op.f('ix_trips_service_id'), table_name='trips')
    op.drop_index(op.f('ix_trips_route_id'), table_name='trips')
    op.drop_table('trips')
    op.drop_table('transfers')
    op.drop_index(op.f('ix_pathways_pathway_id'), table_name='pathways')
    op.drop_table('pathways')
    op.drop_index(op.f('ix_fare_rules_fare_id'), table_name='fare_rules')
    op.drop_table('fare_rules')
    op.drop_index(op.f('ix_stops_stop_id'), table_name='stops')
    op.drop_table('stops')
    op.drop_index(op.f('ix_routes_route_id'), table_name='routes')
    op.drop_table('routes')
    op.drop_index(op.f('ix_fare_attributes_fare_id'), table_name='fare_attributes')
    op.drop_table('fare_attributes')
    op.drop_index(op.f('ix_calendar_dates_service_id'), table_name='calendar_dates')
    op.drop_table('calendar_dates')
    op.drop_index(op.f('ix_shapes_shape_id'), table_name='shapes')
    op.drop_table('shapes')
    op.drop_index(op.f('ix_levels_level_id'), table_name='levels')
    op.drop_table('levels')
    op.drop_index(op.f('ix_feed_info_feed_publisher_name'), table_name='feed_info')
    op.drop_table('feed_info')
    op.drop_index(op.f('ix_calendar_service_id'), table_name='calendar')
    op.drop_table('calendar')
    op.drop_index(op.f('ix_agencies_agency_id'), table_name='agencies')
    op.drop_table('agencies')
    # ### end Alembic commands ###
